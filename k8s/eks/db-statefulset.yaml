# k8s/eks/db-statefulset.yaml
---
apiVersion: v1
kind: Service
metadata:
  name: db
  namespace: three-tier
  labels:
    app: db
spec:
  # Headless service so StatefulSet pods get stable DNS:
  # db-0.db.three-tier.svc.cluster.local
  clusterIP: None
  selector:
    app: db
  ports:
    - name: pg
      port: 5432
      targetPort: 5432

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: db
  namespace: three-tier
  labels:
    app: db
spec:
  serviceName: db
  replicas: 1
  selector:
    matchLabels:
      app: db
  template:
    metadata:
      labels:
        app: db
    spec:
      # Ensure the mounted EBS volume is writable by postgres (uid 999)
      securityContext:
        fsGroup: 999
        fsGroupChangePolicy: OnRootMismatch
      # Ensure subdir exists and ownership is correct (avoids lost+found issue)
      initContainers:
        - name: init-pgdata
          image: busybox:1.36
          command:
            - sh
            - -c
            - |
              set -e
              mkdir -p /var/lib/postgresql/data/pgdata
              chown -R 999:999 /var/lib/postgresql/data
          volumeMounts:
            - name: pgdata
              mountPath: /var/lib/postgresql/data
      containers:
        - name: postgres
          image: postgres:16
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 999
            runAsGroup: 999
          env:
            - name: POSTGRES_PASSWORD
              value: "postgres"
            - name: POSTGRES_USER
              value: "postgres"
            - name: POSTGRES_DB
              value: "postgres"
            # Use a subdirectory to avoid "lost+found" complaint
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          ports:
            - name: pg
              containerPort: 5432
          # Basic health checks
          readinessProbe:
            exec:
              command: ["sh","-c","pg_isready -U postgres -d postgres -h 127.0.0.1 -p 5432"]
            initialDelaySeconds: 10
            periodSeconds: 5
          livenessProbe:
            exec:
              command: ["sh","-c","pg_isready -U postgres -d postgres -h 127.0.0.1 -p 5432"]
            initialDelaySeconds: 30
            periodSeconds: 10
          resources:
            requests:
              cpu: "100m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
          volumeMounts:
            - name: pgdata
              mountPath: /var/lib/postgresql/data
  volumeClaimTemplates:
    - metadata:
        name: pgdata
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: gp3   # <- must exist; created separately
        resources:
          requests:
            storage: 20Gi
